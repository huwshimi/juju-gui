.machine-view-panel {
    .display-flex;
    box-sizing: border-box;
    position: absolute;
    z-index: 600;
    top: @navbar-height + @environment-header-height - 1;
    bottom: 0;
    left: @bws-sidebar-width;
    right: 0;
    padding: 0;
    background-color: #fff;

    input[type="text"] {
        // Using a variable here because LESS strips commas in mixin args.
        @box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);
        .create-box-shadow(@box-shadow);
        .create-border-radius(@border-radius);
        margin: 0;
        padding: 7px 10px;
        background:  #eee;
        border: none;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    .column {
        .customize-scrollbar;
        .display-flex;
        .flex(1);
        .flex-direction(column);
        border-right: 1px solid @machine-view-border-colour;

        &.unplaced {
            .all-placed {
                padding: 20px;
                border-bottom: 1px solid @machine-view-border-colour;
                line-height: 40px;

                .sprite {
                    margin-right: 7px;
                }
            }
        }
        &.machines {
            .content {
                // Allow the token borders to overlap the column borders
                // that would otherwise be hidden by overflow: hidden.
                margin-left: -1px;
                margin-right: -1px;
                padding-left: 1px;
                padding-right: 1px;
            }
        }
        &.containers {
            .content {
                // Allow the token borders to overlap the column borders
                // that would otherwise be hidden by overflow: hidden.
                margin-left: -1px;
                padding-left: 1px;
            }
        }
        .head {
            .flex-basis(auto);
            position: relative;
            padding: 20px;

            h3 {
                .type3;
                display: block;
                height: 27px;
            }
            a {
                float: right;
            }
            .labels {
                display: block;
                height: 20px;
            }
            .label:after {
                content: ', ';
            }
            .label:last-child:after {
                content: '';
            }
            .drop {
                .type4;

                span {
                    margin-top: -13px;
                }
            }
        }
        .content {
            .flex(1);
            overflow-x: hidden;
            overflow-y: auto;
            border-top: 1px solid @machine-view-border-colour;

            ul.items {
                margin: 0;
                list-style: none;
            }
        }
    }
    .droppable {
        &.drop-hover .drop {
            background-color: #eee;
        }
        .drop {
            display: block;

            * {
                // Set the children to not fire pointer events, specifically to
                // not fire the enter events otherwise the parent will fire an
                // exit event and the highlight will be removed.
                pointer-events: none;
            }
        }
    }
    .drop {
        display: none;
        position: absolute;
        top: -1px;
        bottom: -1px;
        left: -1px;
        right: -1px;
        background-color: #fff;
        border: 1px dashed #d9d9d9;
        text-align: center;

        span {
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            margin-top: -13px;
        }
    }
}
.flag-mv .machine-view-panel {
    bottom: @deployer-bar-height;
}
